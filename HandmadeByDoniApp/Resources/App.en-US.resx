<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="AddNewProducts" xml:space="preserve">
    <value>Add New Products</value>
  </data>
  <data name="All" xml:space="preserve">
    <value> All </value>
  </data>
  <data name="AllProducts" xml:space="preserve">
    <value>All  Products</value>
  </data>
  <data name="AllUser" xml:space="preserve">
    <value>All User</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="Box" xml:space="preserve">
    <value>Box</value>
  </data>
  <data name="Bulgarian" xml:space="preserve">
    <value>Bulgarian</value>
  </data>
  <data name="Cart" xml:space="preserve">
    <value>Cart</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>BGN</value>
  </data>
  <data name="Decanter" xml:space="preserve">
    <value>Decanter</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Glass" xml:space="preserve">
    <value>Glass</value>
  </data>
  <data name="HandmadeByDoni" xml:space="preserve">
    <value>Handmade By Doni</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Newest" xml:space="preserve">
    <value>Newest</value>
  </data>
  <data name="NewstOrders" xml:space="preserve">
    <value>Newst Orders</value>
  </data>
  <data name="NotAvailable" xml:space="preserve">
    <value>Not Available</value>
  </data>
  <data name="Oldest" xml:space="preserve">
    <value>Oldest</value>
  </data>
  <data name="OrderStatus" xml:space="preserve">
    <value>Order Status</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="PriceAscending" xml:space="preserve">
    <value>Price (Ascending)</value>
  </data>
  <data name="PriceDescending" xml:space="preserve">
    <value>Price (Descending)</value>
  </data>
  <data name="ProductPerPage" xml:space="preserve">
    <value>Product Per Page</value>
  </data>
  <data name="ProductSorting" xml:space="preserve">
    <value>Sort by:</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchString" xml:space="preserve">
    <value>Search by word</value>
  </data>
  <data name="Set" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="WebDesign" xml:space="preserve">
    <value>Web Dаesign by STTodorov</value>
  </data>
  <data name="NewProducts" xml:space="preserve">
    <value>New Products</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="NoComments" xml:space="preserve">
    <value>No Comments</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="Write" xml:space="preserve">
    <value>Write</value>
  </data>
  <data name="ShopList" xml:space="preserve">
    <value>Shop List</value>
  </data>
  <data name="Buy" xml:space="preserve">
    <value>Buy</value>
  </data>
  <data name="NoProducts" xml:space="preserve">
    <value>There are no product in the shop list.</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="AddAddressCompleteOrder" xml:space="preserve">
    <value>Add an address to complete the order.</value>
  </data>
  <data name="ProductBuy" xml:space="preserve">
    <value>Products to Buy</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="DeliveryCompany" xml:space="preserve">
    <value>Delivery Company</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>Sent</value>
  </data>
  <data name="NotSent" xml:space="preserve">
    <value>Not Sent</value>
  </data>
  <data name="CancellationOrder" xml:space="preserve">
    <value>Cancellation of the order</value>
  </data>
  <data name="ProductsOrder" xml:space="preserve">
    <value>Products in Orders</value>
  </data>
  <data name="UsersOrders" xml:space="preserve">
    <value>Users Orders</value>
  </data>
  <data name="MethodPayment" xml:space="preserve">
    <value>Method Payment</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Commands" xml:space="preserve">
    <value>Commands</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="AdminMenu" xml:space="preserve">
    <value>Admin Menu</value>
  </data>
  <data name="UserIsOnline" xml:space="preserve">
    <value>User Is Online</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember Me</value>
  </data>
  <data name="LogInGoogle" xml:space="preserve">
    <value>Log in with Google</value>
  </data>
  <data name="SearchByWord" xml:space="preserve">
    <value>Keyword</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="OrderDetails" xml:space="preserve">
    <value>Order Details</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="AddComment" xml:space="preserve">
    <value>Add comment</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="UploadFiles" xml:space="preserve">
    <value>Upload Files</value>
  </data>
  <data name="NoProductInSystem" xml:space="preserve">
    <value> There are no product in the system currently available.</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome to the best place for Art!</value>
  </data>
  <data name="LogginError" xml:space="preserve">
    <value>There was an error while logging you in!</value>
  </data>
  <data name="UnexpectedError" xml:space="preserve">
    <value>Unexpected error occurred!</value>
  </data>
  <data name="AddSuccessfully" xml:space="preserve">
    <value>was added successfully!</value>
  </data>
  <data name="RemoveSuccessfully" xml:space="preserve">
    <value>was remove successfully!</value>
  </data>
  <data name="ProductNotExist" xml:space="preserve">
    <value>with the provided id does not exist!</value>
  </data>
  <data name="EditSuccessfully" xml:space="preserve">
    <value>was edited successfully!</value>
  </data>
  <data name="DeleteSuccessfully" xml:space="preserve">
    <value>was delete successfully!</value>
  </data>
  <data name="RecoverySuccessfully" xml:space="preserve">
    <value>was recovered successfully!!</value>
  </data>
  <data name="CategoryNotExist" xml:space="preserve">
    <value>Selected category does not exist!</value>
  </data>
  <data name="ProductNotExistChooseFrom" xml:space="preserve">
    <value>This product does not exist! These are all the products you can choose from.</value>
  </data>
  <data name="PaymentMethodNotExist" xml:space="preserve">
    <value>Selected payment method does not exist!</value>
  </data>
  <data name="DeliveryCompanyNotExist" xml:space="preserve">
    <value>Selected delivery company does not exist!</value>
  </data>
  <data name="NotHaveAddress" xml:space="preserve">
    <value>You don't have Address! You can add your address here:</value>
  </data>
  <data name="EditComment" xml:space="preserve">
    <value>You must be the user, who wrote the comment, which you want to edit!</value>
  </data>
  <data name="CommentNotExist" xml:space="preserve">
    <value>This product does not exist! These are all the products you can comment.</value>
  </data>
  <data name="ProductNotAvailable" xml:space="preserve">
    <value>Some of the products are not available.</value>
  </data>
  <data name="AddProductSuccessfully" xml:space="preserve">
    <value>Product was added to Cart successfully!</value>
  </data>
  <data name="NotHaveOrdars" xml:space="preserve">
    <value>You don't have Orders! You can select products from here</value>
  </data>
  <data name="UnexpectedErrorTryingTo" xml:space="preserve">
    <value>Unexpected error occurred while trying to</value>
  </data>
  <data name="PleaseContactAdministrator" xml:space="preserve">
    <value>Please try again later or contact administrator.</value>
  </data>
  <data name="OrdarIsSent" xml:space="preserve">
    <value>Order with the provided id can not be canceled, because it is already sent!</value>
  </data>
  <data name="CancelSuccessfully" xml:space="preserve">
    <value>is canceled successfully!</value>
  </data>
  <data name="editThe" xml:space="preserve">
    <value>edit the</value>
  </data>
  <data name="addNew" xml:space="preserve">
    <value>add new</value>
  </data>
  <data name="CancelOrder" xml:space="preserve">
    <value>Cancel Order</value>
  </data>
  <data name="openOrderProduct" xml:space="preserve">
    <value>open Order Product</value>
  </data>
  <data name="openOrderStatus" xml:space="preserve">
    <value>open Order Status</value>
  </data>
  <data name="openDetailsOrder" xml:space="preserve">
    <value>open Details Order</value>
  </data>
  <data name="RegisterOrder" xml:space="preserve">
    <value>Register Order</value>
  </data>
  <data name="removeFromCart" xml:space="preserve">
    <value>remove From Cart</value>
  </data>
  <data name="openCart" xml:space="preserve">
    <value>open Cart</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="AreYouSureYouWantToDeleteThisOrder" xml:space="preserve">
    <value>Are you sure you want to delete this order?</value>
  </data>
  <data name="Confirmation" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="PreviousPage" xml:space="preserve">
    <value>Previous Page</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>Next Page</value>
  </data>
</root>