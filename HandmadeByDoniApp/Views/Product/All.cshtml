@using HandmadeByDoniApp.Web.Infrastructure.Extensions
@model AllProductsQueryModel

@{
    ViewBag.Title = "All Products";
}

<h2 class="text-center title">@ViewBag.Title</h2>
<hr />

<form method="get">
    <div class="row">
        <div class="form-group col-md-2">
            <div class="form-group">
                <label asp-for="ProductsName"></label>
                <select asp-for="ProductsName" class="form-control" onchange="this.form.submit()">
                    <option value="0">All</option>
                    <option value="1">Glass</option>
                    <option value="2">Decanter</option>
                    <option value="3">Box</option>
                    <option value="4">Set</option>
                </select>
            </div>
        </div>
        <div class="form-group col-md-3 d-flex justify-content-lg-between">

            <div class="form-group">
                <label asp-for="ProductPerPage"></label>
                <select asp-for="ProductPerPage" class="form-control" onchange="this.form.submit()">
                    <option value="9">9</option>
                    <option value="18">18</option>
                    <option value="27">27</option>
                </select>
            </div>
            @if ((int)Model.ProductsName == 1)
            {
                <div class="form-group">
                    <label asp-for="GlassCategory"></label>
                    <select asp-for="GlassCategory" class="form-control" onchange="this.form.submit()">
                        <option value="">All</option>
                        @foreach (var category in Model.GlassCategories)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>
            }
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control" placeholder="..." onchange="this.form.submit()">
        </div>

        <div class="form-group col-md-2">
            <div class="form-group">
                <label asp-for="ProductSorting"></label>
                <select asp-for="ProductSorting" class="form-control" onchange="this.form.submit()">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                    <option value="2">Price (Ascending)</option>
                    <option value="3">Price (Descending)</option>
                    <option value="4">Available</option>
                    <option value="5">Not Available</option>
                </select>
            </div>
        </div>

        <div class="col-md-2">
            <div class="form-group mt-3 p-2">
                <input type="submit" value="Search" class="btn button-memu" />
            </div>
        </div>
    </div>
</form>


@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    int maxPage = (int)Math.Ceiling((double)Model.TotalProduct /
        Model.ProductPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary  @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Product"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-productPerPage="@(Model.ProductPerPage)"
           asp-route-productsName="@((int)Model.ProductsName)"
           asp-route-category="@Model.GlassCategory"
           asp-route-searchString="@Model.SearchString"
           asp-route-sorting="@((int)Model.ProductSorting)"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Products.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Product"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-productPerPage="@(Model.ProductPerPage)"
           asp-route-productsName="@((int)Model.ProductsName)"
           asp-route-category="@Model.GlassCategory"
           asp-route-searchString="@Model.SearchString"
           asp-route-sorting="@((int)Model.ProductSorting)">>></a>
    </div>
</div>

@if (!Model.Products.Any())
{
    <h2 class="text-center">No Product found by the given criteria!</h2>
}

<div class="row">
    @foreach (var product in Model.Products)
    {
        @* <partial name="_ProductPartial" model="@product"  />*@
        <div class="col-md-4">
            <div class="card mb-3">
                <img class="card-img-top" src="@product.ImageUrl" alt="Image">
                <div class="card-body text-center">
                    <h4>@product.Title</h4>
                    <h6>(@(product.IsActive ? "Available" : "Not Available"))</h6>
                    @if (product.IsSet == false && product.IsActive == true)
                    {
                        <h6>
                            Price
                            <b>@($"{product.Price:f2}") BGN</b>
                        </h6>

                        <a class="btn btn-primary"
                           asp-area=""
                           asp-controller="Order"
                           asp-action="Add"
                           asp-route-returnUrl="@Url.Action("All", "Product", new { area = "",currentPage=Model.CurrentPage,
                                                                                              productPerPage=Model.ProductPerPage,
                                                                                              productsName=(int)Model.ProductsName,
                                                                                              category=Model.GlassCategory,
                                                                                              searchString=Model.SearchString,
                                                                                              sorting=(int)Model.ProductSorting })"
                           asp-route-id="@product.Id">Add to Cart </a>
                    }
                    <br />
                    <a asp-area=""
                       asp-controller="Product"
                       asp-action="Details"
                       asp-route-id="@product.Id"
                       class="btn btn-success">Details</a>

                    @if (User.IsAdmin())
                    {

                        <a asp-area="Admin"
                           asp-controller="Product"
                           asp-action="Edit"
                           asp-route-id="@product.Id"
                           class="btn btn-warning">Edit</a>

                        <a asp-area="Admin"
                           asp-controller="Product"
                           asp-action="Delete"
                           asp-route-id="@product.Id"
                           asp-route-returnUrl="@Url.Action("All", "Product", new { area = "",currentPage=Model.CurrentPage,
                                                                                              productPerPage=Model.ProductPerPage,
                                                                                              productsName=(int)Model.ProductsName,
                                                                                              category=Model.GlassCategory,
                                                                                              searchString=Model.SearchString,
                                                                                              sorting=(int)Model.ProductSorting })"
                           class="btn btn-danger">Delete</a>

                        if (product.IsActive == false)
                        {
                            <a asp-area="Admin"
                               asp-controller="Product"
                               asp-action="Recovery"
                               asp-route-returnUrl="@Url.Action("All", "Product", new { area = "",currentPage=Model.CurrentPage,
                                                                                              productPerPage=Model.ProductPerPage,
                                                                                              productsName=(int)Model.ProductsName,
                                                                                              category=Model.GlassCategory,
                                                                                              searchString=Model.SearchString,
                                                                                              sorting=(int)Model.ProductSorting })"
                               asp-route-id="@product.Id"
                               class="btn btn-dark">Restore</a>
                        }
                    }

                    <a class="ml-2 btn btn-info"
                       asp-area=""
                       asp-controller="Comment"
                       asp-action="Comment"
                       asp-route-id="@product.Id">Comment</a>

                </div>
            </div>
        </div>

    }
</div>

