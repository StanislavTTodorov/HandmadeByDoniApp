@* @using HandmadeByDoniApp.Services.Data.Interfaces
@using HandmadeByDoniApp.Web.Infrastructure.Extensions
@model ProductViewModel
@{
    string[] imageUrls = Model.ImageUrl.Split(",", StringSplitOptions.RemoveEmptyEntries).ToArray();
}

<div id="productCarousel" class="w-100" data-bs-ride="carousel">

        @foreach (var imageUrl in imageUrls)
        {
            <div class="carousel-item @(imageUrl == imageUrls.First() ? "active" : "")">
                <img src="@imageUrl" class="d-block w-100 img" alt="Image">
            </div>
        }
    <!-- Контроли за предишна и следваща снимка -->
    <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="false"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="false"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div> *@
@* @using HandmadeByDoniApp.Services.Data.Interfaces
@using HandmadeByDoniApp.Web.Infrastructure.Extensions
@model ProductViewModel
@{
    string[] imageUrls = Model.ImageUrl.Split(",", StringSplitOptions.RemoveEmptyEntries).ToArray();
    string fimageUrls = string.Empty;
}

<style>
    .carousel-control-prev, .carousel-control-next {
    background-color: rgba(0,0,0,0.3);
    width: 40px;
    height: 40px;
    top: 50%;
    transform: translateY(-50%);
    border-radius: 50%;
    }

    .carousel-control-prev {
    left: 15px;
    }

    .carousel-control-next {
    right: 15px;
    }

    /* Стилове за модалния прозорец */
    .modal-fullscreen .modal-dialog {
    max-width: 100%;
    margin: 0;
    }

    .modal-fullscreen .modal-content {
    height: 100vh;
    background-color: rgba(0,0,0,0.9);
    }

    .modal-fullscreen img {
    object-fit: contain;
    max-height: 100%;
    max-width: 100%;
    }
</style>

<div id="productCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="false">
    <div class="carousel-inner">
        @foreach (var imageUrl in imageUrls)
        {
            fimageUrls = imageUrl;
            <div class="carousel-item @(imageUrl == imageUrls.First() ? "active" : "")">
                <img src="@imageUrl" class="d-block w-100 clickable-image" alt="Product image"
                     data-bs-toggle="modal" data-bs-target="#imageModal"
                     onclick="showFullImage('@imageUrl')">
            </div>
        }
    </div>

    @if (imageUrls.Length > 1)
    {
        <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    }
</div>


<!-- Модален прозорец за пълен екран -->
<div class="modal fade modal-fullscreen" id="imageModal" tabindex="-1" aria-hidden="true">
    <button type="button" class="btn-close btn-close-white position-absolute top-0 end-0 m-3"
            data-bs-dismiss="imageModal" aria-label="Close"></button>

    <div class="modal-dialog modal-dialog-centered">
        @foreach (var imageUrl in imageUrls)
        {
            
            <div class="carousel-item @(imageUrl == imageUrls.First() ? "active" : "")">
                <img src="@imageUrl" class="d-block w-100 clickable-image" alt="Product image">
            </div>
        }
    </div>
    @if (imageUrls.Length > 1)
    {
        <button class="carousel-control-prev" type="button" data-bs-target="#imageModal" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#imageModal" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    }
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Функция за показване на пълноразмерна снимка
        function showFullImage(imageUrl) {
            document.getElementById('fullSizeImage').src = imageUrl;
        }

        // Инициализация на карусела
        document.addEventListener('DOMContentLoaded', function() {
            var carousel = new bootstrap.Carousel(document.getElementById('productCarousel'), {
                interval: false
            });

            // Затваряне на модала с ESC
            document.addEventListener('keydown', function(e) {
                if (e.key === "Escape") {
                    var modal = bootstrap.Modal.getInstance(document.getElementById('imageModal'));
                    if (modal) modal.hide();
                }
            });
        });
    </script>
} *@
@*_ImageUrlsPartial*@
@using HandmadeByDoniApp.Services.Data.Interfaces
@using HandmadeByDoniApp.Web.Infrastructure.Extensions
@model (string ImageUrls, string CarouselId)
@{
    string[] imageUrls = Model.ImageUrls.Split(",", StringSplitOptions.RemoveEmptyEntries).ToArray();
    var carouselId = Model.CarouselId != null ? Model.CarouselId : "productCarousel";
    var imageJson = System.Text.Json.JsonSerializer.Serialize(imageUrls);
}

<style>
    .carousel-control-prev, .carousel-control-next {
        background-color: rgba(0,0,0,0.3);
        width: 40px;
        height: 40px;
        top: 50%;
        transform: translateY(-50%);
        border-radius: 50%;
    }

    .carousel-control-prev {
        left: 15px;
    }

    .carousel-control-next {
        right: 15px;
    }

    .fullscreen-modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.9);
        z-index: 9999;
        display: none;
        align-items: center;
        justify-content: center;
    }

        .fullscreen-modal.active {
            display: flex;
        }

    .fullscreen-image {
        max-width: 90%;
        max-height: 90%;
        object-fit: contain;
    }

    .close-btn {
        position: absolute;
        top: 20px;
        right: 20px;
        color: white;
        font-size: 30px;
        cursor: pointer;
    }

    .modal-nav {
        position: absolute;
        width: 100%;
        display: flex;
        justify-content: space-between;
        padding: 0 20px;
    }

    .modal-nav-btn {
        background: rgba(0,0,0,0.5);
        color: white;
        border: none;
        font-size: 30px;
        cursor: pointer;
        border-radius: 50%;
        width: 50px;
        height: 50px;
    }
</style>

<!-- Основна карусела -->
<div id="@carouselId" class="carousel slide" data-bs-ride="carousel" data-bs-interval="false" data-image-urls='@Html.Raw(imageJson)'>
    <div class="carousel-inner">
        @for (int i = 0; i < imageUrls.Length; i++)
        {
            <div class="carousel-item @(i == 0 ? "active" : "")">
                <img src="@imageUrls[i]" class="d-block w-100 gallery-img" data-index="@i" data-carousel-id="@carouselId">
            </div>
        }
    </div>

    @if (imageUrls.Length > 1)
    {
        <button class="carousel-control-prev" type="button" data-bs-target="#@carouselId" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#@carouselId" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    }
</div>

<!-- Fullscreen модал -->
<div id="fullscreenModal" class="fullscreen-modal">
    <span class="close-btn" onclick="closeFullscreen()">&times;</span>
    <div class="modal-nav">
        <button class="modal-nav-btn" onclick="navigateFullscreen(-1)">❮</button>
        <button class="modal-nav-btn" onclick="navigateFullscreen(1)">❯</button>
    </div>
    <img id="fullscreenImage" class="fullscreen-image" src="" alt="Fullscreen image">
</div>
    <script>
        let currentImageIndex = 0;
        const images = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(imageUrls));

        document.addEventListener('DOMContentLoaded', function () {
            const thumbnails = document.querySelectorAll('.gallery-img');

            thumbnails.forEach((img, index) => {
                img.addEventListener('click', () => {
                    openFullscreen(index);
                });
            });

            document.addEventListener('keydown', function (e) {
                if (e.key === "Escape") closeFullscreen();
                if (e.key === "ArrowLeft") navigateFullscreen(-1);
                if (e.key === "ArrowRight") navigateFullscreen(1);
            });
        });

        function openFullscreen(index) {
            currentImageIndex = index;
            document.getElementById('fullscreenImage').src = images[index];
            document.getElementById('fullscreenModal').classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        function closeFullscreen() {
            document.getElementById('fullscreenModal').classList.remove('active');
            document.body.style.overflow = 'auto';
        }

        function navigateFullscreen(direction) {
            currentImageIndex = (currentImageIndex + direction + images.length) % images.length;
            document.getElementById('fullscreenImage').src = images[currentImageIndex];
        }
    </script>
    
